volumes:
    prometheus_data:
    grafana_data:
    pgdata:

services:
    product-app:
        container_name: product-app
        hostname: product-app
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - .env:/app/.env
        ports:
            - "${GRPC_PORT}:${GRPC_PORT}"
            - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
        depends_on:
            - product-db
        networks:
            - default
        profiles:
            - default
    product-app-profiled:
        container_name: product-app
        hostname: product-app
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - .env:/app/.env
        command: ["./main", "--pprof"]
        ports:
            - "${GRPC_PORT}:${GRPC_PORT}"
            - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
            - "${PPROF_PORT}:${PPROF_PORT}"
        depends_on:
            - product-db
        networks:
            - default
        profiles:
            - pprof
    product-db:
        container_name: product-db
        hostname: product-db
        image: postgres
        environment:
            POSTGRES_PASSWORD: ${PG_PASSWORD}
            POSTGRES_USER: ${PG_USER}
            POSTGRES_DB: ${PG_DBNAME}
        ports:
            - "${PG_PORT}:${PG_PORT}"
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - default
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DBNAME}"]
            interval: 5s
            timeout: 5s
        profiles:
            - default
            - pprof
    migrate:
        image: migrate/migrate
        command: -source file://migrations -database ${PG_MIGRATIONS_URL} up
        volumes:
            - ./migrations:/migrations
        depends_on:
            - product-db
        profiles:
            - default
            - pprof
    prometheus:
        image: prom/prometheus
        ports:
            - "9090:9090"
        volumes:
            - prometheus_data:/prometheus
            - ./prometheus.yml:/etc/prometheus/prometheus.yaml
            - ./alerts.yml:/etc/prometheus/alerts.yaml
        networks:
            - default
        profiles:
            - default
            - pprof
    grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"
        volumes:
            - grafana_data:/var/lib/grafana
        networks:
            - default
        profiles:
            - default
            - pprof
networks:
    default:
        driver: bridge
