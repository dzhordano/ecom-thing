{
  "swagger": "2.0",
  "info": {
    "title": "Product Service",
    "description": "Product Service",
    "version": "1.0.0",
    "contact": {
      "name": "swageland",
      "url": "https://example.com",
      "email": "g2E5w@example.com"
    },
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "ProductService",
      "description": "Product Service"
    }
  ],
  "basePath": "/api/v1",
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/products": {
      "get": {
        "summary": "SearchProducts",
        "description": "Search products",
        "operationId": "ProductService_SearchProducts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SearchProductsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "query\n\nSearch query",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "category",
            "description": "category\n\nCategory description",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "string"
          },
          {
            "name": "min_price",
            "description": "min_price\n\nProduct price",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "pattern": "^[0-9]+(\\.[0-9]{1,2})?$"
          },
          {
            "name": "max_price",
            "description": "max_price\n\nProduct price",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double",
            "pattern": "^[0-9]+(\\.[0-9]{1,2})?$"
          },
          {
            "name": "limit",
            "description": "limit\n\nNumber of products to return",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "20",
            "pattern": "^[0-9]+$"
          },
          {
            "name": "offset",
            "description": "offset\n\nNumber of products to skip",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64",
            "default": "0",
            "pattern": "^[0-9]+$"
          }
        ],
        "tags": [
          "ProductService"
        ],
        "x-irreversible": true
      },
      "post": {
        "summary": "CreateProduct",
        "description": "Create a new product",
        "operationId": "ProductService_CreateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Represents a request for product creation",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateProductRequest"
            }
          }
        ],
        "tags": [
          "ProductService"
        ],
        "security": [
          {
            "JWT Token": [
              "user",
              "admin"
            ]
          }
        ],
        "x-irreversible": true
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "GetProduct",
        "description": "Get a product",
        "operationId": "ProductService_GetProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Product id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "tags": [
          "ProductService"
        ],
        "x-irreversible": true
      },
      "put": {
        "summary": "UpdateProduct",
        "description": "Update a product.",
        "operationId": "ProductService_UpdateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Product id",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductServiceUpdateProductBody"
            }
          }
        ],
        "tags": [
          "ProductService"
        ],
        "security": [
          {
            "JWT Token": [
              "user",
              "admin"
            ]
          }
        ],
        "x-irreversible": true
      }
    },
    "/products/{id}/deactivate": {
      "patch": {
        "summary": "DeactivateProduct",
        "description": "Deactivate a product",
        "operationId": "ProductService_DeactivateProduct",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeactivateProductResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Product id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ProductService"
        ],
        "security": [
          {
            "JWT Token": [
              "user",
              "admin"
            ]
          }
        ],
        "x-irreversible": true
      }
    }
  },
  "definitions": {
    "ProductServiceUpdateProductBody": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "format": "string",
          "example": "Cool Category",
          "description": "Category description",
          "title": "category",
          "maxLength": 32,
          "minLength": 1,
          "pattern": "^[A-Za-z ]+$"
        },
        "name": {
          "type": "string",
          "format": "string",
          "example": "Example Product Name",
          "description": "Name of the product",
          "title": "name",
          "maxLength": 256,
          "minLength": 1,
          "pattern": "^[A-Za-z ]+$"
        },
        "desc": {
          "type": "string",
          "format": "string",
          "example": "Example Description",
          "description": "Product description",
          "title": "desc",
          "maxLength": 2048,
          "minLength": 1
        },
        "is_active": {
          "type": "boolean",
          "format": "boolean",
          "example": true,
          "description": "Product status",
          "title": "is_active"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": "99.99",
          "description": "Product price",
          "title": "price",
          "maximum": 128000,
          "minimum": 0.01,
          "pattern": "^[0-9]+(\\.[0-9]{1,2})?$"
        }
      },
      "description": "Update product info",
      "title": "UpdateProductRequest",
      "required": [
        "category",
        "name",
        "desc",
        "is_active",
        "price"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1CreateProductRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "string",
          "example": "Example Product Name",
          "description": "Name of the product",
          "title": "name",
          "maxLength": 256,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9 ]+$"
        },
        "category": {
          "type": "string",
          "format": "string",
          "example": "Cool Category",
          "description": "Category description",
          "title": "category",
          "maxLength": 32,
          "minLength": 1,
          "pattern": "^[A-Za-z ]+$"
        },
        "desc": {
          "type": "string",
          "format": "string",
          "example": "Example Description",
          "description": "Product description",
          "title": "desc",
          "maxLength": 2048,
          "minLength": 1,
          "pattern": "^[A-Za-z0-9 ]+$"
        },
        "price": {
          "type": "number",
          "format": "double",
          "example": "99.99",
          "description": "Product price",
          "title": "price",
          "maximum": 128000,
          "minimum": 0.01,
          "pattern": "^[0-9]+(\\.[0-9]{1,2})?$"
        }
      },
      "description": "Represents a request for product creation",
      "title": "CreateProductRequest",
      "required": [
        "name",
        "category",
        "desc",
        "price"
      ]
    },
    "v1CreateProductResponse": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/v1Product",
          "description": "Created product"
        }
      },
      "description": "Response for product creation",
      "title": "CreateProductResponse"
    },
    "v1DeactivateProductResponse": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/v1Product",
          "description": "Deactivated product info"
        }
      },
      "description": "Contains deactivated product info",
      "title": "DeactivateProductResponse"
    },
    "v1GetProductResponse": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/v1Product",
          "description": "Product info",
          "title": "product"
        }
      },
      "description": "Contains product info",
      "title": "GetProductResponse"
    },
    "v1Product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID (UUID)"
        },
        "category": {
          "type": "string",
          "description": "Category"
        },
        "name": {
          "type": "string",
          "description": "Name of the product"
        },
        "desc": {
          "type": "string",
          "description": "Description"
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": "Price"
        },
        "is_active": {
          "type": "boolean",
          "description": "Is active (available)"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Created at"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Updated at"
        }
      },
      "description": "Product",
      "title": "Product"
    },
    "v1SearchProductsResponse": {
      "type": "object",
      "properties": {
        "products": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Product"
          },
          "description": "List of products with info",
          "title": "products"
        }
      },
      "description": "Contains product info",
      "title": "GetProductResponse"
    },
    "v1UpdateProductResponse": {
      "type": "object",
      "properties": {
        "product": {
          "$ref": "#/definitions/v1Product",
          "description": "Updated product"
        }
      },
      "description": "Contains updated product info",
      "title": "UpdateProductResponse"
    }
  },
  "securityDefinitions": {
    "JWT Token": {
      "type": "apiKey",
      "description": "JWT Token",
      "name": "Authorization Token",
      "in": "header",
      "scopes": {
        "admin": "authorized admin scope",
        "user": "authorized user scope"
      }
    }
  },
  "externalDocs": {
    "description": "More about gRPC-Gateway",
    "url": "https://github.com/grpc-ecosystem/grpc-gateway"
  }
}
