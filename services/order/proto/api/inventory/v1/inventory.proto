syntax = "proto3";

package api.inventory.v1;

option go_package = "dzhordano/ecom-thing/services/order/pkg/api/inventory/v1;inventory_v1";

// InventoryService provides basic operations with product inventory.
service InventoryService {
  // GetItem returns Item object with requested id.
  rpc GetItem(GetItemRequest) returns (GetItemResponse);
  // SetItem sets (according to provided operation) Item'm quantity amount for requested id.
  rpc SetItem(SetItemRequest) returns (SetItemResponse);
  // SetItems works like SetItem, but for multiple items.
  rpc SetItems(SetItemsRequest) returns (SetItemsResponse);
}

// Item represents an item in the inventory.
message Item {
  // UUID of the product.
  string product_id = 1;
  // Available quantity of the product.
  uint64 available_quantity = 2;
  // Reserved (locked) quantity of the product.
  uint64 reserved_quantity = 3;
}

// ItemOP represents an item in the inventory with quantity.
//
// Used for perforimng operations (adding, subtracting, locking, unlocking).
message ItemOP {
  // UUID of the product.
  string product_id = 1;
  // Quantity of the product.
  uint64 quantity = 2;
}

// Operation type represents operation that is going to be performed.
//
// Used for perforimng operations (adding, subtracting, locking, unlocking) on the item's quantity.
enum OperationType {
  // Unspecified.
  OPERATION_TYPE_UNSPECIFIED = 0;
  // Add item quantity.
  OPERATION_TYPE_ADD = 1;
  // Subtract item quantity.
  OPERATION_TYPE_SUB = 2;
  // Lock item quantity.
  OPERATION_TYPE_LOCK = 3;
  // Unlock item quantity.
  OPERATION_TYPE_UNLOCK = 4;
  // Subtract locked item quantity.
  OPERATION_TYPE_SUB_LOCKED = 5;
}

// Takes UUID of the item.
message GetItemRequest {
  // UUID.
  string id = 1;
}

// Returns Item object with requested id.
message GetItemResponse {
  // Item object.
  Item item = 1;
}

// Takes UUID of the item and quantity to set.
message SetItemRequest {
  // Items with UUID and quantity to set.
  ItemOP item = 1;
  // Operation type.
  OperationType operation_type = 2;
}

// Empty.
message SetItemResponse {}

// Takes UUID of the item and quantity to set.
message SetItemsRequest {
  // Items with UUID and quantity to set.
  repeated ItemOP items = 1;
  // Operation type.
  OperationType operation_type = 2;
}

// Empty.
message SetItemsResponse {}
