syntax = "proto3";

package api.payment.v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "buf/validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "pkg/api/payment/v1;payment_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Payment Service"
    version: "1.0.0"
    description: "Payment Service"
    contact: {
      name: "swageland"
      url: "https://example.com"
      email: "g2E5w@example.com"
    }
    license: {
      name: "MIT License"
      url: "https://opensource.org/licenses/MIT"
    }
  }
  base_path: "/api/v1"
  external_docs: {
    url: "https://github.com/grpc-ecosystem/grpc-gateway"
    description: "More about gRPC-Gateway"
  }

  schemes: HTTP
  //  schemes: HTTPS // TODO uncomment if https implemented
  consumes: "application/json"
  produces: "application/json"

  security_definitions: {
    security: {
      key: "JWT Token"
      value: {
        name: "Authorization Token"
        description: "JWT Token"
        type: TYPE_API_KEY
        in: IN_HEADER
        scopes: {
          scope: {
            key: "user"
            value: "authorized user scope"
          },
          scope: {
            key: "admin"
            value: "authorized admin scope"
          }
        }
      }
    }
  }
};

// Сервис платежей
service PaymentService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "PaymentService"
    description: "Payment Service"
  };

  // Создание платежа. В идеале не вызвается т.к. платежи создаются в создания заказа, т.е. исходя из топиков в kafka.
  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse) {
    option (google.api.http) = {
      post: "/payments"
      body: "*"
      response_body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Create payment"
      summary: "Creates a payment and starts transaction."
      tags: ["PaymentService"]
      security: {
        security_requirement: {
          key: "JWT Token"
          value: {
            scope: ["user", "admin"]
          }
        }
      }
      extensions: {
        key: "x-irreversible";
        value: {
          bool_value: true
        }
      }
    };
  };
  // Получение статуса платежа.
  rpc GetPaymentStatus(GetPaymentStatusRequest) returns (GetPaymentStatusResponse) {
    option (google.api.http) = {
      get: "/payments/{id}"
      response_body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Returns payment status."
      summary: "Returns payment status with provided id."
      tags: ["PaymentService"]
      security: {
        security_requirement: {
          key: "JWT Token"
          value: {
            scope: ["user", "admin"]
          }
        }
      }
      extensions: {
        key: "x-irreversible";
        value: {
          bool_value: true
        }
      }
    };
  };
  // Отмена платежа.
  rpc CancelPayment(CancelPaymentRequest) returns (CancelPaymentResponse) {
    option (google.api.http) = {
      patch: "/payments/{id}/cancel"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Marks payment as canceled."
      summary: "Marks payment with provided id as canceled."
      tags: ["PaymentService"]
      security: {
        security_requirement: {
          key: "JWT Token"
          value: {
            scope: ["user", "admin"]
          }
        }
      }
      extensions: {
        key: "x-irreversible";
        value: {
          bool_value: true
        }
      }
    };
  };
  // Подтверждение платежа.
  rpc ConfirmPayment(ConfirmPaymentRequest) returns (ConfirmPaymentResponse) {
    option (google.api.http) = {
      patch: "/payments/{id}/confirm"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Marks payment as completed."
      summary: "Marks payment with provided id as completed."
      tags: ["PaymentService"]
      security: {
        security_requirement: {
          key: "JWT Token"
          value: {
            scope: ["user", "admin"]
          }
        }
      }
      extensions: {
        key: "x-irreversible";
        value: {
          bool_value: true
        }
      }
    };
  };
  // Повторение платежа.
  rpc RetryPayment(RetryPaymentRequest) returns (RetryPaymentResponse) {
    option (google.api.http) = {
      patch: "/payments/{id}/retry"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      description: "Retries payment process (if payment was not canceled or completed)."
      summary: "Tries to redo payment with provided id."
      tags: ["PaymentService"]
      security: {
        security_requirement: {
          key: "JWT Token"
          value: {
            scope: ["user", "admin"]
          }
        }
      }
      extensions: {
        key: "x-irreversible";
        value: {
          bool_value: true
        }
      }
    };
  };
}

// Заказ к оплате
message Order {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Order"
      description: "Represents order info for payment building."
    }
  };
  // Идентификатор заказа
  string id = 1 [
    json_name = "id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "id"
      description: "ID (UUID)"
      example: "\"00000000-0000-0000-0000-000000000000\""
      type: STRING
      format: "uuid"
    }
  ];
  // Идентификатор пользователя
  string user_id = 2 [
    json_name = "user_id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "user_id"
      description: "ID (UUID)"
      example: "\"00000000-0000-0000-0000-000000000000\""
      type: STRING
      format: "uuid"
    }
  ];
  // Валюта
  string currency = 3 [
    json_name = "currency",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "currency"
      description: "Currency"
      example: "\"USD\""
      type: STRING
      format: "uuid"
    }
  ];
  // Сумма заказа
  double total_price = 4 [
    json_name = "total_price",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "total_price"
      description: "Total price of order in provided currency"
      type: NUMBER
      format: "double"
    }
  ];
}

// Запрос на создание платежа
message CreatePaymentRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CreatePaymentRequest"
      description: "Request for creating a payment."
      required: ["order", "payment_method", "payment_description", "redirect_url"]
    }
  };
  // Заказ к оплате
  Order order = 1 [
    json_name = "order",
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "order"
      description: "Order info"
    }
  ];
  // Способ оплаты
  string payment_method = 2 [
    json_name = "payment_method",
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "payment_method"
      description: "Payment method (bank_card, cash, trasfer)."
      example: "\"cash\""
      type: STRING
      format: "string"
    }
  ];
  // Данные способа оплаты
  string payment_description = 3 [
    json_name = "payment_description",
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string = {
      max_len: 255
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "payment_description"
      description: "Payment description."
      example: "\"Some description\""
      type: STRING
      format: "string"
    }
  ];
  // URL перенаправления после оплаты TODO надо ли тут?
  string redirect_url = 4 [
    json_name = "redirect_url",
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string.uri = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "redirect_url"
      description: "URL to redirect to."
      type: STRING
      format: "string"
    }
  ];
}

// Ответ на создание платежа
message CreatePaymentResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CreatePaymentResponse"
      description: "Payment creation response."
    }
  };

  // Идентификатор платежа
  string id = 1 [
    json_name = "id",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "id"
      description: "ID (UUID)"
      example: "\"00000000-0000-0000-0000-000000000000\""
      type: STRING
      format: "uuid"
    }
  ];
}

// Запрос на получение статуса платежа
message GetPaymentStatusRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "GetPaymentStatusRequest"
      description: "Returns payment status."
      required: ["id"]
    }
  };

  // Идентификатор платежа
  string id = 1 [
    json_name = "id",
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string.uuid = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "id"
      description: "ID (UUID)"
      example: "\"00000000-0000-0000-0000-000000000000\""
      type: STRING
      format: "uuid"
    }
  ];
}

// Ответ на получение статуса платежа
message GetPaymentStatusResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "GetPaymentStatusResponse"
      description: "Payment status."
    }
  };

  // Статус
  string status = 1 [
    json_name = "status",
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "status"
      description: "Payment status"
    }
  ];
}

// Запрос на отмену платежа
message CancelPaymentRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CancelPaymentRequest"
      description: "Tries to cancel payment with provided id."
    }
  };

  // Идентификатор платежа
  string id = 1 [
    json_name = "id",
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string.uuid = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "id"
      description: "ID (UUID)"
      example: "\"00000000-0000-0000-0000-000000000000\""
      type: STRING
      format: "uuid"
    }
  ];
}

// Ответ на отмену платежа
message CancelPaymentResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "CancelPaymentResponse"
      description: "Not useful, look for code."
    }
  };
}

// Запрос на подтверждение платежа
message ConfirmPaymentRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "ConfirmPaymentRequest"
      description: "Tries to confirm payment with provided id."
    }
  };

  // Идентификатор платежа
  string id = 1[
    json_name = "id",
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string.uuid = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "id"
      description: "ID (UUID)"
      example: "\"00000000-0000-0000-0000-000000000000\""
      type: STRING
      format: "uuid"
    }
  ];
}

// Ответ на подтверждение платежа
message ConfirmPaymentResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "ConfirmPaymentResponse"
      description: "Not useful, look for code."
    }
  };
}

// Запрос на повторение платежа
message RetryPaymentRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "RetryPaymentRequest"
      description: "Tries to retry payment with provided id."
    }
  };

  // Идентификатор платежа
  string id = 1 [
    json_name = "id",
    (google.api.field_behavior) = REQUIRED,
    (buf.validate.field).string.uuid = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      title: "id"
      description: "ID (UUID)"
      example: "\"00000000-0000-0000-0000-000000000000\""
      type: STRING
      format: "uuid"
    }
  ];
}

// Ответ на повторение платежа
message RetryPaymentResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "RetryPaymentResponse"
      description: "Not useful, look for code."
    }
  };
}
